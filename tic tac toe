# Function to print the Tic-Tac-Toe board
def print_board(board):
    for row in board:
        print(" | ".join(row))
        print("-" * 5)

# Function to check if a player has won the game
def check_winner(board, player):
    # Check rows, columns, and diagonals for a win
    for i in range(3):
        if all([board[i][j] == player for j in range(3)]) or all([board[j][i] == player for j in range(3)]):
            return True
    if board[0][0] == player and board[1][1] == player and board[2][2] == player:
        return True
    if board[0][2] == player and board[1][1] == player and board[2][0] == player:
        return True
    return False

# Function to check if the board is full (for draw condition)
def is_board_full(board):
    return all(board[i][j] != " " for i in range(3) for j in range(3))

# Function to handle the player's turn
def player_turn(board, player):
    while True:
        try:
            # Get the row and column from the player input
            move = input(f"Player {player}, enter your move (row and column between 1-3, e.g., '1 2'): ")
            row, col = map(int, move.split())
            if row < 1 or row > 3 or col < 1 or col > 3:
                print("Invalid input! Please enter row and column between 1 and 3.")
                continue
            if board[row - 1][col - 1] != " ":
                print("Cell is already taken, choose a different one.")
                continue
            # Update the board
            board[row - 1][col - 1] = player
            break
        except ValueError:
            print("Invalid input! Please enter two integers (row and column).")
        except IndexError:
            print("Invalid input! Please enter row and column between 1 and 3.")

# Main function to run the game
def play_game():
    # Initial empty board
    board = [[" " for _ in range(3)] for _ in range(3)]
    
    current_player = "X"
    
    while True:
        print_board(board)
        
        # Player's turn
        player_turn(board, current_player)
        
        # Check if the current player wins
        if check_winner(board, current_player):
            print_board(board)
            print(f"Player {current_player} wins!")
            break
        
        # Check if the board is full (draw condition)
        if is_board_full(board):
            print_board(board)
            print("It's a draw!")
            break
        
        # Switch player
        current_player = "O" if current_player == "X" else "X"

# Run the game
if __name__ == "__main__":
    play_game()


output :

  |   |  
-----
  |   |  
-----
  |   |  
Player X, enter your move (row and column between 1-3, e.g., '1 2'): 1 1
X |   |  
-----
  |   |  
-----
  |   |  
Player O, enter your move (row and column between 1-3, e.g., '1 2'): 2 2
X |   |  
-----
  | O |  
-----
  |   |  
Player X, enter your move (row and column between 1-3, e.g., '1 2'): 1 2
X | X |  
-----
  | O |  
-----
  |   |  
Player O, enter your move (row and column between 1-3, e.g., '1 2'): 2 1
X | X |  
-----
O | O |  
-----
  |   |  
Player X, enter your move (row and column between 1-3, e.g., '1 2'): 1 3
X | X | X
-----
O | O |  
-----
  |   |  
Player X wins!
