from collections import deque

def bfs_jug_problem(capacity1, capacity2, target):
    visited = set()
    queue = deque([(0, 0)])  # Starting with both jugs empty
    while queue:
        x, y = queue.popleft()
        if x == target or y == target:
            return True
        if (x, y) not in visited:
            visited.add((x, y))
            queue.extend([(capacity1, y), (x, capacity2), (0, y), (x, 0), (x - min(x, capacity2 - y), y + min(x, capacity2 - y)),
                          (x + min(y, capacity1 - x), y - min(y, capacity1 - x))])
    return False

if bfs_jug_problem(4, 3, 2):
    print("Solution found.")
else:
    print("No solution found.")


output 
Solution found.
